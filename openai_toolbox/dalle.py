"""
DOCUMENTATION GENERATED BY AI

This module provides a function to generate and save an image using the DALL-E API.

Main Purpose and Functionality:
- The main purpose of this code is to generate an image according to a given textual prompt.
- It interacts with the DALL-E API to create an image and saves the generated image in the local file system.

Related Files and Dependencies:
- This code depends on the following packages:
  - openai
  - requests
  - django (specifically, the django.conf module)
- Make sure to install these packages and configure the Django settings properly to provide the OPENAI_API_KEY.

Location of Key Implementation Details:
- The key function in this module is `generate_image(prompt)`, which takes a textual prompt as input and saves the generated image locally.
- The function communicates with the DALL-E API using the openai package.
- The image is saved in the "static/assets/generated_images" directory with the prompt as the file name.

Additional Information:
- In order to use this code, please ensure that you have a valid API key for the DALL-E service.
- This code assumes that the Django settings module is properly configured to provide the OPENAI_API_KEY.
- Make sure that the "static/assets/generated_images" directory exists in your project, as this is where the generated images will be saved.

Example Usage:
    image_path = generate_image("A futuristic cityscape")


Copyright 2023, Joe Crowley, All rights reserved.
"""
import openai
import requests
from django.conf import settings

openai.api_key = settings.OPENAI_API_KEY

def generate_image(prompt):
    # Call the DALL-E API
    response = openai.Image.create(
        prompt=prompt,
        n=1,  # Number of images to generate
        size="512x512",  # Image size
    )

    # Get the image URL from the response
    image_url = response['data'][0]['url']

    # Download the image
    response = requests.get(image_url)
    response.raise_for_status()

    # Save the image to the local system
    image_path = f"assets/generated_images/{prompt}.jpg"
    with open("static/"+image_path, "wb") as f:
        f.write(response.content)

    return image_path

